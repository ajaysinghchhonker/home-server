# Creating Server
version: '2.1'
services:
  portainer:
    container_name: portainer
    image: portainer/portainer
    command: -H unix:///var/run/docker.sock
    restart: always
    ports:
      - "9000:9000"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ${CONFIG}/portainer/data:/data

  transmission:
    container_name: transmission
    image: linuxserver/transmission
    restart: unless-stopped
    ports:
      - "9091:9091"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/transmission:/config
      - ${STORAGE}/downloads/complete:/downloads
      - ${STORAGE}/downloads/temp:/var/lib/transmission-daemon/incomplete

  plex:
    container_name: plex
    image: plexinc/pms-docker
    restart: unless-stopped
    ports:
      - "32400:32400/tcp"
      - "3005:3005/tcp"
      - "8324:8324/tcp"
      - "32469:32469/tcp"
      - "1900:1900/udp"
      - "32410:32410/udp"
      - "32412:32412/udp"
      - "32413:32413/udp"
      - "32414:32414/udp"
      - "33400:33400"
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=
      - PLEX_UID=${PUID}
      - PLEX_GID=${PGID}
    hostname: media-server
    volumes:
      - ${CONFIG}/plex:/config
      - ${CONFIG}/plex/transcode:/transcode
      - ${STORAGE}:/data
      
  tautulli:
    container_name: tautulli
    image: tautulli/tautulli
    restart: unless-stopped
    depends_on: 
      - plex
    ports:
      - "8181:8181"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/tautulli:/config
      - ${CONFIG}/plex/Library/Application\ Support/Plex\ Media\ Server/Logs:/plex_logs:ro

  sonarr:
    container_name: sonarr
    image: linuxserver/sonarr
    restart: unless-stopped
    depends_on:
      - transmission
      - jackett
    ports:
      - "8989:8989"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/sonarr:/config
      - ${STORAGE}/series:/tv
      - ${STORAGE}/downloads/complete:/downloads

  radarr:
    container_name: radarr
    image: linuxserver/radarr
    restart: unless-stopped
    depends_on:
      - transmission
      - jackett
    ports:
      - "7878:7878"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/radarr:/config
      - ${STORAGE}/movies:/movies
      - ${STORAGE}/downloads/complete:/downloads

  jackett:
    container_name: jackett
    image: linuxserver/jackett
    restart: unless-stopped
    ports:
      - "9117:9117"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/jackett:/config
      - ${STORAGE}/downloads/blackhole:/downloads
      
  ubooquity :
    container_name: ubooquity 
    image: linuxserver/ubooquity 
    restart: unless-stopped
    ports:
      - "2202:2202"
      - "2203:2203"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/ubooquity:/config
      - ${STORAGE}/comics:/comics     
    
  ombi:
    container_name: ombi
    image: linuxserver/ombi
    restart: unless-stopped
    depends_on:
      - sonarr
      - radarr
      - jackett
    ports:
      - "3579:3579"
    environment:
      - TZ=${TZ}
      - PUID=${PUID}
      - PGID=${PGID}
    volumes:
      - ${CONFIG}/ombi:/config

  netdata:
    container_name: netdata
    image: titpetric/netdata
    restart: unless-stopped
    cap_add:
      - SYS_PTRACE
    network_mode: host
    environment:
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/netdata:/etc/netdata
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /var/run/docker.sock:/var/run/docker.sock

  mylar:
    container_name: mylar
    build: https://github.com/Mathix/docker-mylar.git
    restart: unless-stopped
    depends_on:
      - transmission
      - jackett
    ports:
      - "8090:8090"
    environment:
      - PUID=${PUID}
      - GUID=1000
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/mylar:/config
      - ${STORAGE}/downloads/complete:/downloads
      - ${STORAGE}/comics:/comics

  organizr:
    container_name: organizr
    restart: unless-stopped
    image: organizrtools/organizr-v2
    volumes:
      - ${CONFIG}/organizr:/config
    ports:
      - "80:80"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    volumes:
      - ${CONFIG}/organizr:/config

  watchtower:
    container_name: watchtower
    restart: unless-stopped
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    command: --schedule "0 0 4 * * *" --cleanup

  homeassistant:
    container_name: homeassistant
    restart: unless-stopped
    image: homeassistant/home-assistant
    devices:
      - /dev/ttyUSB0:/dev/ttyUSB0
      - /dev/ttyUSB1:/dev/ttyUSB1
      - /dev/ttyACM0:/dev/ttyACM0
    volumes:
      - ${CONFIG}/homeassistant:/config
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "8123:8123"
    privileged: true
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}

  mariadb:
    image: "linuxserver/mariadb"
    container_name: "mariadb"
    hostname: mariadb
    volumes:
        - ${CONFIG}/mariadb:/config
    ports:
      - "3306:3306"
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      
  nextcloud:
    container_name: nextcloud
    restart: unless-stopped
    image: linuxserver/nextcloud
    depends_on:
      - mariadb
    volumes:
      - ${CONFIG}/nextcloud:/config
      - ${ROOT}/nextcloud:/data
      - ${STORAGE}:/server/data
      - ${CONFIG}:/server/config
    ports:
      - "443:443"
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
      
  phpmyadmin:
    hostname: phpmyadmin
    container_name: phpmyadmin
    image: phpmyadmin/phpmyadmin
    restart: unless-stopped
    depends_on:
      - mariadb
    links:
      - mariadb:db
    ports:
      - "8081:80"
    environment:
      - PMA_HOST=mariadb
      - MYSQL_ROOT_PASSWORD=${MYSQL_PASSWORD}
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    
